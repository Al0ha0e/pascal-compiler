EPS---
EPS
programstruct---
id
program_head---
id
;---
;
program_body---
const var procedure function begin
.---
.
id---
id
(---
(
idlist---
id
)---
)
const_declarations---
EPS const
var_declarations---
EPS var
subprogram_declarations---
EPS procedure function
compound_statement---
begin
,---
,
const---
const
const_declaration---
id 
=---
=
const_value---
+ - ' digits float
+---
+
num---
digits float
----
-
'---
'
letter---
letter
var---
var
var_declaration---
id
:---
:
type---
array integer real boolean char
basic_type---
integer real boolean char
array---
array
[---
[
period---
digits
]---
]
of---
of
integer---
integer
real---
real
boolean---
boolean
char---
char 
digits---
digits
..---
..
subprogram---
procedure function
subprogram_head---
procedure function
subprogram_body---
const var begin
procedure---
procedure
formal_parameter---
EPS (
function---
function
parameter_list---
id var 
parameter---
id var
var_parameter---
var
value_parameter---
id
begin---
begin
statement_list---
EPS ; id begin if for read write
end---
end
statement---
EPS id begin if for read write
variable---
id
assignop---
assignop
expression---
id ( - digits not float
if---
if
then---
then
else_part---
EPS else
for---
for
to---
to 
do---
do
read---
read
variable_list---
id
write---
write
expression_list---
id ( - digits not float
id_varpart---
EPS ( [
else---
else
simple_expression---
id ( - digits not float
relop---
relop
term---
id ( - digits not float
or---
or
mulop---
mulop
factor---
id ( - digits not float
not---
not
float---
float 
idlist_77---
EPS ,
subprogram_declarations_78---
EPS procedure function
const_declaration_79---
EPS ;
var_declaration_80---
EPS ;
period_81---
EPS ,
parameter_list_82---
EPS ;
statement_list_83---
EPS ;
variable_list_84---
EPS ,
expression_list_85---
EPS ,
simple_expression_86---
EPS + - or
term_87---
EPS mulop
program_head_88---
EPS (
statement_89---
EPS assignop
expression_90---
EPS relop
$---
$